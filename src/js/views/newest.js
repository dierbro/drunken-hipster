// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  HN.Views.Newest = (function(_super) {

    __extends(Newest, _super);

    function Newest() {
      this.addOne = __bind(this.addOne, this);
      return Newest.__super__.constructor.apply(this, arguments);
    }

    Newest.prototype.initialize = function() {
      _.bindAll(this, "render");
      this.collection.on("reset", this.render);
      return this.render();
    };

    Newest.prototype.render = function() {
      console.log(this.collection);
      this.addAll();
      return this;
    };

    Newest.prototype.addAll = function() {
      return this.collection.each(this.addOne);
    };

    Newest.prototype.addOne = function(post) {
      var view;
      view = new HN.Views.PostRow({
        model: post
      });
      return this.$el.append(view.render().el);
    };

    return Newest;

  })(HN.Views.Page);

}).call(this);
