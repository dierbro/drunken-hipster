// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  HN.Views.Page = (function(_super) {

    __extends(Page, _super);

    function Page() {
      return Page.__super__.constructor.apply(this, arguments);
    }

    Page.prototype.className = "page";

    Page.prototype.initialize = function() {};

    Page.prototype.show = function() {
      var $old;
      $('.page').css({
        "position": "absolute"
      });
      console.log(this.options.back);
      if (this.options.back) {
        forge.topbar.addButton({
          text: "Back",
          position: "left"
        }, function() {
          return HN.router.navigate("/", true);
        });
        forge.tabbar.hide();
      } else {
        forge.topbar.removeButtons();
        forge.tabbar.show();
      }
      if ($('.page').length) {
        $old = $('.page').not(this.el);
        $old.get(0).style["margin-left"] = "";
        $old.get(0).style["-webkit-transform"] = "";
        this.$el.appendTo('body').hide();
        this.$el.show();
        $old.remove();
        $('.page').css({
          "position": "static"
        });
      } else {
        this.$el.appendTo('body').hide();
        this.$el.show();
      }
      return window.scrollTo(0, 0);
    };

    return Page;

  })(Backbone.View);

}).call(this);
