// Generated by CoffeeScript 1.3.3
(function() {

  HN.Utils.DiscussionParser = (function() {

    function DiscussionParser() {}

    DiscussionParser.parse = function(content) {
      var discussion;
      discussion = this.extract_details(content);
      discussion["comments"] = this.extract_comment(content);
      return discussion;
    };

    DiscussionParser.extract_details = function(content) {
      var details, details_delim, news_counter, trs;
      details_delim = 'height:10px';
      news_counter = 0;
      trs = $(content).find("center > table > tbody > tr:nth-child(3) > td > table:nth-child(1) tr");
      return details = {
        link: $(trs[0]).find("td:nth-child(2) > a").attr("href"),
        title: $(trs[0]).find("td:nth-child(2) > a").html(),
        domain: this.get_domain($(trs[0]).find("td:nth-child(2) > span").html()),
        points: parseInt($(trs[1]).find("td:nth-child(2) > span").html()),
        user: $(trs[1]).find("td:nth-child(2) > a:nth-child(2)").html(),
        discussion_link: $(trs[1]).find("td:nth-child(2) > a:nth-child(3)").attr("href"),
        comments_counter: this.get_comments_count($(trs[1]).find("td:nth-child(2) > a:nth-child(3)").html())
      };
    };

    DiscussionParser.extract_comment = function(content) {
      var comment, comments, last_level, reply_link, reply_link_html, tr, trs, _i, _len;
      trs = $(content).find("center > table > tbody > tr:nth-child(3) > td > table:nth-child(4) > tbody > tr");
      comments = [];
      last_level = 0;
      for (_i = 0, _len = trs.length; _i < _len; _i++) {
        tr = trs[_i];
        reply_link = $(tr).find("u > a").attr("href");
        reply_link_html = $(tr).find("span.comment > p:last-child").remove();
        comment = {
          reply_link: reply_link,
          comment_body: $(tr).find("span.comment font").html(),
          user: $(tr).find("span.comhead > a").html(),
          level: parseInt($(tr).find("td:first-child > img").attr("width"))
        };
        comments.push(comment);
      }
      return comments;
    };

    DiscussionParser.get_comments_count = function(string) {
      if (isNaN(parseInt(string))) {
        return 0;
      } else {
        return parseInt(string);
      }
    };

    DiscussionParser.get_domain = function(string) {
      if (string !== null) {
        return string.replace(/^ \(/, "").replace(/\) $/, "");
      } else {
        return "";
      }
    };

    return DiscussionParser;

  })();

}).call(this);
