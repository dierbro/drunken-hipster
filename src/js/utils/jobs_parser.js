// Generated by CoffeeScript 1.3.3
(function() {

  HN.Utils.JobsParser = (function() {

    function JobsParser() {}

    JobsParser.parse = function(content) {
      var id, item, jobs, _i, _len, _ref;
      jobs = [];
      _ref = this.extract_jobs(content);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if ($(item[1]).find("td:nth-child(2) > a:nth-child(3)").attr("href") == null) {
          id = parseInt($(item[0]).find("td:nth-child(3) > a").attr("href").replace("item?id=", ""));
        } else {
          id = parseInt($(item[1]).find("td:nth-child(2) > a:nth-child(3)").attr("href").replace("item?id=", ""));
        }
        jobs.push({
          id: id,
          link: $(item[0]).find("td:nth-child(3) > a").attr("href"),
          title: $(item[0]).find("td:nth-child(3) > a").html(),
          domain: this.get_domain($(item[0]).find("td:nth-child(3) > span").html()),
          points: parseInt($(item[1]).find("td:nth-child(2) > span").html()),
          user: $(item[1]).find("td:nth-child(2) > a:nth-child(2)").html(),
          discussion_link: $(item[1]).find("td:nth-child(2) > a:nth-child(3)").attr("href"),
          comments_counter: this.get_comments_count($(item[1]).find("td:nth-child(2) > a:nth-child(3)").html())
        });
      }
      return jobs;
    };

    JobsParser.extract_jobs = function(content) {
      var jobs, jobs_counter, jobs_delim, jobs_page_delim, tr, trs, _i, _len;
      jobs_delim = 'height:5px';
      jobs_page_delim = 'height:45px';
      jobs_counter = 0;
      trs = $(content).find("center > table > tbody > tr:nth-child(3) > td > table tr").get();
      trs.splice(0, 2);
      jobs = [];
      for (_i = 0, _len = trs.length; _i < _len; _i++) {
        tr = trs[_i];
        if ($(tr).attr("style") === jobs_delim) {
          jobs_counter += 1;
        } else if ($(tr).attr("style") === jobs_page_delim) {
          break;
        } else {
          jobs[jobs_counter] || (jobs[jobs_counter] = []);
          jobs[jobs_counter].push(tr);
        }
      }
      return jobs;
    };

    JobsParser.get_comments_count = function(string) {
      if (isNaN(parseInt(string))) {
        return 0;
      } else {
        return parseInt(string);
      }
    };

    JobsParser.get_domain = function(string) {
      if (string !== null) {
        return string.replace(/^ \(/, "").replace(/\) $/, "");
      } else {
        return "";
      }
    };

    return JobsParser;

  })();

}).call(this);
